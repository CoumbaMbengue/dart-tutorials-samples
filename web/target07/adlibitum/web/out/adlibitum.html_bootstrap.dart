import "dart:async" as BC;import "dart:html" as t;import "dart:collection" as mC;import "dart:uri" as BD;import "dart:isolate" as AD;class nC{static const  oC="Chrome";static const  pC="Safari";final  iC;final  minimumVersion;const nC(this.iC,[this.minimumVersion]);}class qC{final  name;const qC(this.name);}final k=new n();var VB=''; get WB{if(EB){FB(k,l.o,'sillyword');}return VB;}set WB( g){if(DB(k)){GB(k,l.o,'sillyword',VB,g);}VB=g;}var XB=''; get YB{if(EB){FB(k,l.o,'adjective');}return XB;}set YB( g){if(DB(k)){GB(k,l.o,'adjective',XB,g);}XB=g;}var ZB=''; get aB{if(EB){FB(k,l.o,'animal');}return ZB;}set aB( g){if(DB(k)){GB(k,l.o,'animal',ZB,g);}ZB=g;}var bB=''; get cB{if(EB){FB(k,l.o,'bodypart');}return bB;}set cB( g){if(DB(k)){GB(k,l.o,'bodypart',bB,g);}bB=g;}var dB=''; get eB{if(EB){FB(k,l.o,'verb');}return dB;}set eB( g){if(DB(k)){GB(k,l.o,'verb',dB,g);}dB=g;}var fB=''; get gB{if(EB){FB(k,l.o,'adverb');}return fB;}set gB( g){if(DB(k)){GB(k,l.o,'adverb',fB,g);}fB=g;} CC(){}bool DC(){if(WB!=''&&YB!=''&&aB!=''&&cB!=''&&eB!=''&&gB!=''){return true;}else{return false;}} EC(){var ED=t.document.body;final FD=new t.ParagraphElement(),GD=new t.ParagraphElement(),HD=new t.ParagraphElement();var ID,JD,KD,LD,MD,ND,OD;var PD=new aC(ED);ID=ED.nodes[3];PD.listen(ID.onInput,(h){WB=ID.value;});PD.LB(()=>WB,(g){if(ID.value!=g)ID.value=g;},false,false);JD=ED.nodes[5];PD.listen(JD.onInput,(h){YB=JD.value;});PD.LB(()=>YB,(g){if(JD.value!=g)JD.value=g;},false,false);LD=ED.nodes[7];PD.listen(LD.onInput,(h){aB=LD.value;});PD.LB(()=>aB,(g){if(LD.value!=g)LD.value=g;},false,false);MD=ED.nodes[9];PD.listen(MD.onInput,(h){cB=MD.value;});PD.LB(()=>cB,(g){if(MD.value!=g)MD.value=g;},false,false);ND=ED.nodes[11];PD.listen(ND.onInput,(h){eB=ND.value;});PD.LB(()=>eB,(g){if(ND.value!=g)ND.value=g;},false,false);OD=ED.nodes[13];PD.listen(OD.onInput,(h){gB=OD.value;});PD.LB(()=>gB,(g){if(OD.value!=g)OD.value=g;},false,false);KD=ED.nodes[15];PD.kC(KD,()=>DC(),(PD){var QD,RD,SD;SD=FD.clone(true);var TD=PD.KB(()=>WB,false);SD.nodes.addAll([new t.Text('Dear Ms. '),TD,new t.Text(',')]);QD=GD.clone(true);var UD=PD.KB(()=>YB,false);var VD=PD.KB(()=>aB,false);var WD=PD.KB(()=>cB,false);var XD=PD.KB(()=>eB,false);QD.nodes.addAll([new t.Text('Little '),UD,new t.Text(' Billy missed school\n        because he was sick with wild-'),VD,new t.Text(' flu.\n        His '),WD,new t.Text(' swelled up and fell off.\n        He can no longer '),XD,new t.Text('.')]);RD=HD.clone(true);var YD=PD.KB(()=>gB,false);RD.nodes.addAll([new t.Text('Most '),YD,new t.Text(' yours, Billy\'s mother')]);PD.addAll([new t.Text('\n        '),SD,new t.Text('\n        \n        '),QD,new t.Text('\n        \n        '),RD,new t.Text('\n      ')]);});PD.QB();PD.insert();}main(){sB=true;CC();EC();}const rC=const sC();typedef  CB( e);typedef  FC( changes);typedef  u();typedef  GC();class SB{final oldValue;final newValue;final  changes;SB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is SB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>TC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class l{static const o=1;static const hB=2;static const pB=hB|4;static const qB=hB|8;final  type;final key;final oldValue;final newValue;l(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is l&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>UC(type,key,oldValue,newValue); toString(){var g;switch (type){case o:g='field';break;case hB:g='index';break;case pB:g='insert';break;case qB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} HC(g, i,[ debugName]){if(g is n){var h=g;return iB(h,(m){i(new SB(h,h,m));});}var j=new TB(g,i,debugName);if(!j.ZD()){return JC;}return j.aD;} iB( g, i){if(g.JB==null)g.JB=new jB();var h=g.JB.add(i);return h.remove;}class n{var JB;var IB;final  hashCode= ++n.IC;static var IC=0;} DB( g)=>g.JB!=null&&g.JB.head!=null; get EB=>HB!=null; FB( g, h,i)=>HB.bD(g,h,i); GB( g, j,m, h, i){if((j&(l.pB|l.qB))==0){if(h==i)return;}if(w==null){w=[] ;VC(KC);}if(g.IB==null){g.IB=[] ;w.add(g);}g.IB.add(new l(j,m,h,i));} JC(){}var HB;var rB=100;var w;var AB; KC(){var v=0;while (w!=null||AB!=null){var j=w;w=null;var i=AB;AB=null;if(v++ ==rB){LC(j,i);return;}if(j!=null){for(var h in j){var RB=h.IB;h.IB=null;for(var g=h.JB.head;g!=null;g=g.next){var m=g.value;try {m(RB);}catch (oB,BB){MB(oB,BB,m,'from ${h}');}}}}if(i!=null){i.forEach((zC,lC){lC.cD();});}}} LC( m, j){var g=[] ;if(m!=null){for(var i in m){var RB=i.IB;g.add('${i} ${RB}');}}if(j!=null){for(var v in j.values){var h=v.cD();if(h!=null)g.add('${v} ${h}');}}w=null;AB=null;var BB='exceeded notifiction limit of ${rB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';OC(BB);}class TB{static var MC=0;final  dD= ++TB.MC;final  eD;final  fD;final  gD;final  hD=new Map();final  iD=[] ;var jD=false;var kD;TB(this.eD,this.fD,this.gD); toString()=>gD!=null?'<observer ${dD}: ${gD}>':'<observer ${dD}>'; ZD(){var h=HB;HB=this;try {kD=eD();if(kD is Iterable&&kD is !List&&kD is !n){kD=(kD as Iterable).toList();}}catch (g,i){MB(g,i,eD,'from ${this}');kD=null;}hD.forEach(lD);hD.clear();assert(HB==this);HB=h;mD();return iD.length>0;} nD( i){try {fD(i);}catch (g,h){MB(g,h,fD,'from ${this}');}} mD(){var g=kD;if(g is !n)return;iD.add(iB(g,(h){nD(new SB(g,g,h));}));} bD( v, BB,g){var i=hD.putIfAbsent(v,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|BB;}catch (j,m){MB(j,m,g,'hashCode or operator == from ${this}');}} lD( i, j){iD.add(iB(i,(m){if(jD)return;for(var g in m){var h=j[g.key];if(h!=null&&(h&g.type)!=0){jD=true;if(AB==null){AB=new mC.SplayTreeMap();}AB[dD]=this;return;}}}));} aD(){for(var g in iD){g();}jD=false;} cD(){if(!jD)return null;var g=kD;aD();ZD();try {if(g==kD)return null;}catch (i,j){MB(i,j,g,'operator == from ${this}');return null;}var h=new SB(g,kD);nD(h);return h;}}typedef  NC( message);var OC=(g)=>print(g);typedef  PC(error,stackTrace,obj, message);var MB=QC; QC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class sC{const sC();}class RC{RC();}class SC{SC();}class p<q>{var oD;var pD;var qD;var rD;p.CD( g,this.qD):rD=g{if(qD!=null)qD.sD++ ;} get next=>pD; get value=>rD;set value( g)=>rD=g; tD( g, h){pD=h;oD=g;if(g!=null)g.pD=this;if(h!=null)h.oD=this;return this;} append( g)=>new p<q>.CD(g,qD).tD(this,pD); remove(){if(qD==null)return;qD.sD-- ;if(oD!=null){oD.pD=pD;}else{qD.uD=pD;}if(pD!=null){pD.oD=oD;}else{qD.vD=oD;}pD=null;oD=null;qD=null;}}class jB<q> extends mC.IterableBase<q>{var uD;var vD; get length=>sD;var sD=0;jB(){} get head=>uD; add( h){var g=new p<q>.CD(h,this);if(vD==null)return uD=vD=g;return vD=g.tD(vD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new tC<q>(this);}class tC<q> implements Iterator<q>{var wD;var qD;var xD;var yD=-1;tC(this.qD){wD=new List<p>(qD.length);var h=0;var g=qD.head;while (g!=null){wD[h++ ]=g;g=g.next;}} get current=>xD; moveNext(){do{yD++ ;}while(yD<wD.length&&wD[yD].qD!=qD);if(yD<wD.length){xD=wD[yD].value;return true;}else{xD=null;return false;}}}NB(h,g)=>h.hashCode*31+g.hashCode;TC(h,g,i)=>NB(NB(h,g),i);UC(g,i,h,j)=>NB(NB(g,i),NB(h,j)); VC( h()){var g=new AD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} WC(h, g,[ stringValue]){var i=h is RC;if(stringValue==null){stringValue=h.toString();}if(!i&&g is t.Text){g.text=stringValue;}else{var j=g;g=i?new t.Element.html(stringValue):new t.Text(stringValue);j.replaceWith(g);}return g;} XC(g){if(g is SC)return g.toString();g=g.toString();return ZC(g)?g:'#';}const YC=const["http","https","ftp","mailto"]; ZC( h){var g=new BD.Uri(h).scheme;if(g=='')return true;return YC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class OB{ QB(){} insert(); remove();}class uC extends OB{final  yB;var zD;final  listener;uC(this.yB,this.listener); insert(){zD=yB.listen(listener);} remove(){zD.cancel();zD=null;}}class vC extends OB{final exp;final  action;final  isFinal;var s;vC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new SB(null,exp()));}else if(s!=null){throw new StateError('binding already attached');}else{s=kB(exp,action,'generic-binding');}} remove(){if(!isFinal){s();s=null;}}}class wC extends OB{final  AC;final  mB;final  zB;final  isFinal;var s;wC(this.mB,this.AC,this.zB,this.isFinal); AE(g){AC(zB?XC(g):g);} insert(){if(isFinal){AE(mB());}else if(s!=null){throw new StateError('data binding already attached.');}else{s=kB(mB,(g)=>AE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){s();s=null;}}}class aC extends OB{final  nB;final  children=[] ;final  nodes=[] ;aC(this.nB); listen( i, h){children.add(new uC(i,(g){h(g);fC();}));} KB( h,i){var g=new t.Text('');children.add(new vC(()=>'${h()}',(j){g=WC(h(),g,j.newValue);},i));return g;} LB(g,i,h,[isUrl=false]){children.add(new wC(g,i,isUrl,h));} kC( h,g,i){children.add(new dC(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); QB(){for(var g=0,h=children.length;g<h;g++ ){children[g].QB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class bC extends aC{final exp;var s;bC( g,this.exp):super(g); QB(){} insert(){super.QB();if(nodes.length>0){var i=nB.parentNode;var j=nB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  cC( template);class dC extends bC{var UB=false;final  xB;dC( h,g,this.xB):super(h,g); insert(){s=kB(exp,(g){if(!UB&&g.newValue){xB(this);super.insert();UB=true;}else if(UB&&!g.newValue){super.remove();UB=false;}},'conditional-binding');} remove(){super.remove();s();s=null;}}var sB=false; eC(g, j,[ debugName]){if(sB)return HC(g,j);if(j==null)return (){};if(PB==null)PB=new jB<tB>();var h;var i=false;if(g is wB){h=(g as wB).BE;}else if(g is Function){h=g;try {var m=g();if(m is List){i=true;}else if(m is Iterable){i=true;h=()=>g().toList();}}catch (v,oB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${v}, ${oB})');}}else if(g is List){h=()=>g;i=true;}else if(g is Iterable){h=()=>g.toList();i=true;}var BB=i?new xC(h,j,debugName):new tB(h,j,debugName);var RB=PB.add(BB);return RB.remove;} kB(h,i,[debugName]){var j=eC(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new SB(null,g));return j;}var PB;class tB{final  lB;final  BE;final  CE;var DE;tB(this.BE,this.CE,this.lB){DE=BE();} toString()=>lB==null?'<unnamed>':lB; jC(){var g=EE();if(FE(g)){var h=DE;GE(g);CE(new SB(h,g));return true;}return false;} FE(g)=>DE!=g; GE(g){DE=g;}EE(){try {return BE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return DE;}}final  uB=10; fC(){if(PB==null)return;var g;var h=0;do{g=false;for(var i in PB){if(i.jC()){g=true;}}}while(g&& ++h<uB);if(h==uB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  vB<gC>();typedef  hC<gC>( value);class wB<gC>{wB();}class xC<gC> extends tB{xC(g, i, h):super(g,i,h){GE(EE());} FE( h){if(DE.length!=h.length)return true;for(int g=0;g<DE.length;g++ ){if(DE[g]!=h[g])return true;}return false;} GE(g){DE=new List<gC>.from(g);}}//@ sourceMappingURL=adlibitum.html_bootstrap.dart.map
