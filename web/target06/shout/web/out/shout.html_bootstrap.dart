import "dart:html" as AB;import "dart:async" as jB;import "dart:collection" as VC;import "dart:uri" as jC;import "dart:isolate" as iC;class WC{static const  XC="Chrome";static const  YC="Safari";final  QC;final  minimumVersion;const WC(this.QC,[this.minimumVersion]);}class ZC{final  name;const ZC(this.name);}final NB=new l();var OB=''; get o{if(sB){tB(NB,q.PB,'shoutThis');}return OB;}set o( g){if(rB(NB)){uB(NB,q.PB,'shoutThis',OB,g);}OB=g;} kB(){} lB(){var h=new StringBuffer(o);for(int g=o.length-1;g>=0;g-- ){h.write(o[g]);}return h.toString();} mB(){var mC=AB.document.body;var nC,oC,pC,qC,rC;var sC=new eC(mC);nC=mC.nodes[3];sC.listen(nC.onInput,(h){o=nC.value;});sC.TC(()=>o,(g){if(nC.value!=g)nC.value=g;},false,false);oC=mC.nodes[5];var tC=sC.MB(()=>o.length,false);oC.nodes.addAll([new AB.Text('      Length: '),tC,new AB.Text(' ')]);pC=mC.nodes[7];var uC=sC.MB(()=>o.toUpperCase(),false);pC.nodes.addAll([new AB.Text('     Shouted: '),uC,new AB.Text(' ')]);qC=mC.nodes[9];var vC=sC.MB(()=>(o.length>=6)?o.substring(1,5):o.substring(0,0),false);qC.nodes.addAll([new AB.Text('   Substring: '),vC,new AB.Text(' ')]);rC=mC.nodes[11];var wC=sC.MB(()=>lB(),false);rC.nodes.addAll([new AB.Text(' Palindromic: '),wC,new AB.Text(' ')]);sC.TB();sC.insert();}main(){aB=true;kB();mB();}typedef  BB( e);typedef  nB( changes);typedef  t();typedef  oB();class KB{final oldValue;final newValue;final  changes;KB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is KB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>FC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class q{static const PB=1;static const QB=2;static const XB=QB|4;static const YB=QB|8;final  type;final key;final oldValue;final newValue;q(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is q&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>GC(type,key,oldValue,newValue); toString(){var g;switch (type){case PB:g='field';break;case QB:g='index';break;case XB:g='insert';break;case YB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} pB(g, i,[ debugName]){if(g is l){var h=g;return RB(h,(k){i(new KB(h,h,k));});}var j=new LB(g,i,debugName);if(!j.xC()){return vB;}return j.yC;} RB( g, i){if(g.EB==null)g.EB=new SB();var h=g.EB.add(i);return h.remove;}class l{var EB;var DB;final  hashCode= ++l.qB;static var qB=0;} rB( g)=>g.EB!=null&&g.EB.head!=null; get sB=>CB!=null; tB( g, h,i)=>CB.zC(g,h,i); uB( g, j,k, h, i){if((j&(q.XB|q.YB))==0){if(h==i)return;}if(u==null){u=[] ;HC(wB);}if(g.DB==null){g.DB=[] ;u.add(g);}g.DB.add(new q(j,k,h,i));} vB(){}var CB;var ZB=100;var u;var v; wB(){var s=0;while (u!=null||v!=null){var j=u;u=null;var i=v;v=null;if(s++ ==ZB){xB(j,i);return;}if(j!=null){for(var h in j){var JB=h.DB;h.DB=null;for(var g=h.EB.head;g!=null;g=g.next){var k=g.value;try {k(JB);}catch (WB,w){FB(WB,w,k,'from ${h}');}}}}if(i!=null){i.forEach((hC,UC){UC.AD();});}}} xB( k, j){var g=[] ;if(k!=null){for(var i in k){var JB=i.DB;g.add('${i} ${JB}');}}if(j!=null){for(var s in j.values){var h=s.AD();if(h!=null)g.add('${s} ${h}');}}u=null;v=null;var w='exceeded notifiction limit of ${ZB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';AC(w);}class LB{static var yB=0;final  BD= ++LB.yB;final  CD;final  DD;final  ED;final  FD=new Map();final  GD=[] ;var HD=false;var ID;LB(this.CD,this.DD,this.ED); toString()=>ED!=null?'<observer ${BD}: ${ED}>':'<observer ${BD}>'; xC(){var h=CB;CB=this;try {ID=CD();if(ID is Iterable&&ID is !List&&ID is !l){ID=(ID as Iterable).toList();}}catch (g,i){FB(g,i,CD,'from ${this}');ID=null;}FD.forEach(JD);FD.clear();assert(CB==this);CB=h;KD();return GD.length>0;} LD( i){try {DD(i);}catch (g,h){FB(g,h,DD,'from ${this}');}} KD(){var g=ID;if(g is !l)return;GD.add(RB(g,(h){LD(new KB(g,g,h));}));} zC( s, w,g){var i=FD.putIfAbsent(s,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|w;}catch (j,k){FB(j,k,g,'hashCode or operator == from ${this}');}} JD( i, j){GD.add(RB(i,(k){if(HD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){HD=true;if(v==null){v=new VC.SplayTreeMap();}v[BD]=this;return;}}}));} yC(){for(var g in GD){g();}HD=false;} AD(){if(!HD)return null;var g=ID;yC();xC();try {if(g==ID)return null;}catch (i,j){FB(i,j,g,'operator == from ${this}');return null;}var h=new KB(g,ID);LD(h);return h;}}typedef  zB( message);var AC=(g)=>print(g);typedef  BC(error,stackTrace,obj, message);var FB=CC; CC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class DC{DC();}class EC{EC();}class m<n>{var MD;var ND;var OD;var PD;m.kC( g,this.OD):PD=g{if(OD!=null)OD.QD++ ;} get next=>ND; get value=>PD;set value( g)=>PD=g; RD( g, h){ND=h;MD=g;if(g!=null)g.ND=this;if(h!=null)h.MD=this;return this;} append( g)=>new m<n>.kC(g,OD).RD(this,ND); remove(){if(OD==null)return;OD.QD-- ;if(MD!=null){MD.ND=ND;}else{OD.SD=ND;}if(ND!=null){ND.MD=MD;}else{OD.TD=MD;}ND=null;MD=null;OD=null;}}class SB<n> extends VC.IterableBase<n>{var SD;var TD; get length=>QD;var QD=0;SB(){} get head=>SD; add( h){var g=new m<n>.kC(h,this);if(TD==null)return SD=TD=g;return TD=g.RD(TD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new aC<n>(this);}class aC<n> implements Iterator<n>{var UD;var OD;var VD;var WD=-1;aC(this.OD){UD=new List<m>(OD.length);var h=0;var g=OD.head;while (g!=null){UD[h++ ]=g;g=g.next;}} get current=>VD; moveNext(){do{WD++ ;}while(WD<UD.length&&UD[WD].OD!=OD);if(WD<UD.length){VD=UD[WD].value;return true;}else{VD=null;return false;}}}GB(h,g)=>h.hashCode*31+g.hashCode;FC(h,g,i)=>GB(GB(h,g),i);GC(g,i,h,j)=>GB(GB(g,i),GB(h,j)); HC( h()){var g=new iC.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} IC(h, g,[ stringValue]){var i=h is DC;if(stringValue==null){stringValue=h.toString();}if(!i&&g is AB.Text){g.text=stringValue;}else{var j=g;g=i?new AB.Element.html(stringValue):new AB.Text(stringValue);j.replaceWith(g);}return g;} JC(g){if(g is EC)return g.toString();g=g.toString();return LC(g)?g:'#';}const KC=const["http","https","ftp","mailto"]; LC( h){var g=new jC.Uri(h).scheme;if(g=='')return true;return KC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class HB{ TB(){} insert(); remove();}class bC extends HB{final  gB;var XD;final  listener;bC(this.gB,this.listener); insert(){XD=gB.listen(listener);} remove(){XD.cancel();XD=null;}}class cC extends HB{final exp;final  action;final  isFinal;var p;cC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new KB(null,exp()));}else if(p!=null){throw new StateError('binding already attached');}else{p=bB(exp,action,'generic-binding');}} remove(){if(!isFinal){p();p=null;}}}class dC extends HB{final  iB;final  VB;final  hB;final  isFinal;var p;dC(this.VB,this.iB,this.hB,this.isFinal); YD(g){iB(hB?JC(g):g);} insert(){if(isFinal){YD(VB());}else if(p!=null){throw new StateError('data binding already attached.');}else{p=bB(VB,(g)=>YD(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){p();p=null;}}}class eC extends HB{final  SC;final  children=[] ;final  nodes=[] ;eC(this.SC); listen( i, h){children.add(new bC(i,(g){h(g);NC();}));} MB( h,i){var g=new AB.Text('');children.add(new cC(()=>'${h()}',(j){g=IC(h(),g,j.newValue);},i));return g;} TC(g,i,h,[isUrl=false]){children.add(new dC(g,i,isUrl,h));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); TB(){for(var g=0,h=children.length;g<h;g++ ){children[g].TB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var aB=false; MC(g, j,[ debugName]){if(aB)return pB(g,j);if(j==null)return (){};if(IB==null)IB=new SB<cB>();var h;var i=false;if(g is fB){h=(g as fB).ZD;}else if(g is Function){h=g;try {var k=g();if(k is List){i=true;}else if(k is Iterable){i=true;h=()=>g().toList();}}catch (s,WB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${s}, ${WB})');}}else if(g is List){h=()=>g;i=true;}else if(g is Iterable){h=()=>g.toList();i=true;}var w=i?new fC(h,j,debugName):new cB(h,j,debugName);var JB=IB.add(w);return JB.remove;} bB(h,i,[debugName]){var j=MC(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new KB(null,g));return j;}var IB;class cB{final  UB;final  ZD;final  aD;var bD;cB(this.ZD,this.aD,this.UB){bD=ZD();} toString()=>UB==null?'<unnamed>':UB; RC(){var g=cD();if(dD(g)){var h=bD;eD(g);aD(new KB(h,g));return true;}return false;} dD(g)=>bD!=g; eD(g){bD=g;}cD(){try {return ZD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return bD;}}final  dB=10; NC(){if(IB==null)return;var g;var h=0;do{g=false;for(var i in IB){if(i.RC()){g=true;}}}while(g&& ++h<dB);if(h==dB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  eB<OC>();typedef  PC<OC>( value);class fB<OC>{fB();}class fC<OC> extends cB{fC(g, i, h):super(g,i,h){eD(cD());} dD( h){if(bD.length!=h.length)return true;for(int g=0;g<bD.length;g++ ){if(bD[g]!=h[g])return true;}return false;} eD(g){bD=new List<OC>.from(g);}}//@ sourceMappingURL=shout.html_bootstrap.dart.map
